stages:
    - preparation
    - testing
    - checking
    - security
    - javascript
    - deploy

# Variables
variables:
    POSTGRES_DB: asanato_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: nxRN5q8AJxadtGvX
    POSTGRES_HOST_AUTH_METHOD: trust
    POSTGRES_INITDB_ARGS: "--encoding=UTF8 --data-checksums"
    APP_HOST_NAME: asanpay.local
    API_HOST_NAME: api.asanpay.local
    DB_HOST: postgres

image: edbizarro/gitlab-ci-pipeline-php:7.4

.init_ssh: &init_ssh |
    eval $(ssh-agent -s)
    echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
    [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    # Replace the last line with the following lines if you'd rather
    # leave StrictHostKeyChecking enabled (replace yourdomain.com):
    #
    #  ssh-keyscan yourdomain.com >> ~/.ssh/known_hosts
    #  chmod 644 ~/.ssh/known_hosts

.change_file_permissions: &change_file_permissions |
    find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
    find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;


cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
    stage: preparation
    allow_failure: true
    script:
        - php -v
        - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
        - cp .env.travis .env
        - php artisan key:generate --env=testing
        - php artisan apiato
    artifacts:
        paths:
            - vendor/
            - .env
        expire_in: 1 days
    cache:
        paths:
            - vendor/
    when: always

yarn:
    stage: javascript
    script:
        - yarn --version
        - yarn install --pure-lockfile
        - yarn run production --progress false
    artifacts:
        paths:
            - node_modules/
        expire_in: 1 days
    cache:
        paths:
            - public/css/
            - public/js/
            - public/fonts/
            - public/mix-manifest.json
    when: on_success

phpunit:
    stage: testing
    services:
        -   name: aboozar/postgres:latest
            alias: postgres
    dependencies:
        - composer
    allow_failure: true
    script:
        - php artisan migrate:fresh --no-interaction --env=testing
        - php artisan apiato:seed-deploy --no-interaction --env=testing
        - php artisan apiato:seed-test --no-interaction --env=testing
        - php artisan passport:keys
        - sudo -- sh -c -e "echo '127.0.0.1 $APP_HOST_NAME' >> /etc/hosts"
        - sudo -- sh -c -e "echo '127.0.0.1 $API_HOST_NAME' >> /etc/hosts"
        - sudo php artisan serve --host=$API_HOST_NAME --port=80 &
        - sleep 2
        - curl http://$API_HOST_NAME ; echo;
        - php vendor/bin/phpunit -v --no-coverage --colors=never --stderr --debug
    artifacts:
        paths:
            - ./storage/logs # for debugging
        expire_in: 1 days
    when: on_success

syntax-check:
    stage: checking
    dependencies:
        - composer
        - phpunit
    script:
        - php vendor/bin/phplint
    when: on_success

codestyle:
    stage: checking
    dependencies:
        - composer
        - phpunit
    script:
        - php vendor/bin/phpcs
    when: on_success

phpcpd:
    stage: checking
    script:
        - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
        - php phpcpd.phar --exclude app/Ship/core app
    dependencies:
        - composer
        - phpunit
    cache:
        paths:
            - phpcpd.phar
    when: on_success

sensiolabs:
    stage: security
    script:
        - test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
        - cd security-checker
        - composer install
        - php security-checker security:check ../composer.lock
    dependencies:
        - composer
    cache:
        paths:
            - security-checker/
    when: on_success

staging:
    stage: deploy
    script:
        - *init_ssh
        - *change_file_permissions
        - php artisan deploy asanato.ir -s upload
    environment:
        name: staging
        url: https://api.asanato.ir
    only:
        - staging
    when: manual

production:
    stage: deploy
    script:
        - *init_ssh
        - *change_file_permissions
        - php artisan deploy asanpay.com -s upload
    environment:
        name: production
        url: https://api.asanpay.com
    when: manual
    only:
        - master
        - production
